{"version":3,"sources":["webpack:///./src/pages/guides/montreal.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/default-layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/vintage-quote.js"],"names":["Montreal","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_default_layout__WEBPACK_IMPORTED_MODULE_6__","className","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","_components_vintage_quote__WEBPACK_IMPORTED_MODULE_8__","author","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","photoGraph","render","data","react_sizeme__WEBPACK_IMPORTED_MODULE_5__","size","react_stack_grid__WEBPACK_IMPORTED_MODULE_2___default","gutterWidth","columnWidth","width","montreal","edges","map","node","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","key","id","fluid","_public_static_d_127529582_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","to","src","alt","defaultProps","DefaultLayout","showHeader","Fragment","header","site","siteMetadata","headerTitle","style","margin","maxWidth","padding","paddingTop","_3778772209","bool","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","arrayOf","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","_styles_vintage_quote_module_css__WEBPACK_IMPORTED_MODULE_2__","_styles_vintage_quote_module_css__WEBPACK_IMPORTED_MODULE_2___default","VintageQuote","styles","vintage_quote"],"mappings":"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","file":"component---src-pages-guides-montreal-js-5789ed6efe04cc820d49.js","sourcesContent":["import React from \"react\"\nimport StackGrid from \"react-stack-grid\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { SizeMe } from 'react-sizeme'\n\nimport DefaultLayout from \"../../components/default-layout\"\nimport SEO from \"../../components/seo\"\nimport VintageQuote from '../../components/vintage-quote'\n\nconst Montreal = () => (\n  <DefaultLayout className=\"article\">\n    <SEO title=\"Montréal\" />\n    <h1>Montréal</h1>\n    <VintageQuote author=\"Centre d'histoire de Montréal\">\n      ‟Montreal is a living, dynamic entity, born from the encounter between a territory and a diversity of peoples. Like every city, it is in constant flux — never complete, always in the process of becoming. It bears the traces of those who came before: physical traces, reflected in the architecture and landscapes of its neighborhoods, and intangible traces, cast in lifestyles, languages and mentalities.”\n   </VintageQuote>\n    <h3>Photo's</h3>\n    <StaticQuery\n      query={photoGraph}\n      render={data => (\n        <SizeMe>\n        {(size) => (\n          <StackGrid gutterWidth={15} columnWidth={size.width <= 768 ? '100%' : 450}>\n            {data.montreal.edges.map((node) => <Img key={node.node.id} fluid={node.node.fluid} />)}\n          </StackGrid>\n        )}\n        </SizeMe>\n      )}\n    />\n  </DefaultLayout>\n)\n\nexport default Montreal\n\nconst photoGraph = graphql`\nfragment GridPhotoItem on File {\n  childImageSharp {\n    fixed(width: 250) {\n      ...GatsbyImageSharpFixed\n    }\n  }\n}\n\nquery {\n  montreal: allImageSharp(filter: {original: {src: { regex: \"\\/mtl_img_\\/\" }}}) {\n    edges {\n      node {\n        id\n        fluid(maxWidth: 700) {\n          ...GatsbyImageSharpFluid\n        }\n    \t}\n  \t}\n  }\n}`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n   <div id=\"header-content\">\n      <Link to=\"/\" id=\"home-icon\">\n         <img src={'/home-icon.svg'} alt=\"Home Icon\" id=\"home-icon\"/>\n      </Link>\n      <div id=\"header-title\"><p>{siteTitle}</p></div>\n   </div>\n  </header>\n)\n\nHeader.propTypes = {\n  children: PropTypes.node,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst DefaultLayout = ({ children, className, showHeader }) => (\n  <StaticQuery\n  query={graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          headerTitle\n        }\n      }\n    }\n  `}\n  render={ data => (\n    <>\n      { showHeader && <Header siteTitle={ data.site.siteMetadata.headerTitle } /> }\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n       }} className={ className }>\n        <main>{ children }</main>\n      </div>\n    </>\n  )}\n/>\n)\n\nDefaultLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  showHeader: PropTypes.bool\n}\n\nDefaultLayout.defaultProps = {\n   children: <div></div>,\n   className: '',\n   showHeader: true\n}\n\nexport default DefaultLayout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport styles from \"./styles/vintage-quote.module.css\"\n\nconst VintageQuote = ({ author, children }) => (\n   <div className={ styles.vintage_quote }>\n      <p>{ children }</p>\n      <p>{ author }</p>\n   </div>\n)\n\nVintageQuote.propTypes = {\n  author:  PropTypes.string\n}\n\nVintageQuote.defaultProps = {\n  author: ``\n}\n\n\nexport default VintageQuote\n"],"sourceRoot":""}