{"version":3,"sources":["webpack:///./src/pages/guides.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/default-layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Guides","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_default_layout__WEBPACK_IMPORTED_MODULE_4__","className","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","guidesQuery","render","data","guides","inline_style","display","map","item","style","to","path","name","buildGuides","allGuidesJson","edges","node","_public_static_d_3018761724_json__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","id","gatsby_browser_entry","src","alt","DefaultLayout","showHeader","Fragment","header","headerTitle","margin","maxWidth","padding","paddingTop","_3778772209","bool","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-pages-guides-js-413f9e47f85b074bf171.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\n\nimport DefaultLayout from \"../components/default-layout\"\nimport SEO from \"../components/seo\"\n\nconst Guides = () => (\n  <DefaultLayout className=\"article\">\n    <SEO title=\"Guides\" />\n    <h1>Guides</h1>\n    <h2>A breakdown of places I have lived / traveled</h2>\n    <br />\n    <StaticQuery\n      query={guidesQuery}\n      render={data => {\n        const guides = data.allGuidesJson.edges.map(item => item.node)\n        return buildGuides(guides)\n      }}\n    />\n  </DefaultLayout>\n)\n\nexport default Guides\n\nfunction buildGuides(guides) {\n  const inline_style = { 'display': 'block' }\n  return guides.map(item => <div style={inline_style}><Link to={item.path}>{item.name}</Link></div>)\n}\n\nconst guidesQuery = graphql`\nquery {\n  allGuidesJson {\n    edges {\n      node {\n        name\n        path\n      }\n    }\n  }\n}\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n   <div id=\"header-content\">\n      <Link to=\"/\" id=\"home-icon\">\n         <img src={'/home-icon.svg'} alt=\"Home Icon\" id=\"home-icon\"/>\n      </Link>\n      <div id=\"header-title\"><p>{siteTitle}</p></div>\n   </div>\n  </header>\n)\n\nHeader.propTypes = {\n  children: PropTypes.node,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst DefaultLayout = ({ children, className, showHeader }) => (\n  <StaticQuery\n  query={graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          headerTitle\n        }\n      }\n    }\n  `}\n  render={ data => (\n    <>\n      { showHeader && <Header siteTitle={ data.site.siteMetadata.headerTitle } /> }\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n       }} className={ className }>\n        <main>{ children }</main>\n      </div>\n    </>\n  )}\n/>\n)\n\nDefaultLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  showHeader: PropTypes.bool\n}\n\nDefaultLayout.defaultProps = {\n   children: <div></div>,\n   className: '',\n   showHeader: true\n}\n\nexport default DefaultLayout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}